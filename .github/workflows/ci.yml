name: CI

on:
  push:
    branches:
      - main
      - relative-protocol-package
    tags:
      - 'v*'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Print Swift toolchain version
        run: swift --version

      - name: Ensure Tun2Socks binary is present
        run: ls -R RelativeProtocol/Binary/Tun2Socks.xcframework

      - name: Build RelativeProtocol package (Debug)
        run: swift build --package-path RelativeProtocol

      - name: Build RelativeProtocol package (Release)
        run: swift build --configuration release --package-path RelativeProtocol

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go toolchain
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"

      - name: Prepare build script
        run: chmod +x Scripts/build.sh

      - name: Build Tun2Socks xcframework
        run: ./Scripts/build.sh

      - name: Package xcframework
        run: |
          cd RelativeProtocol/Binary
          zip -r Tun2Socks.xcframework.zip Tun2Socks.xcframework

      - name: Compute checksum
        id: checksum
        run: |
          SHA=$(shasum -a 256 RelativeProtocol/Binary/Tun2Socks.xcframework.zip | awk '{print $1}')
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: RelativeProtocol ${{ github.ref_name }}
          body: |
            Tun2Socks xcframework SHA-256 checksum: `${{ steps.checksum.outputs.sha }}`
          draft: false
          prerelease: false

      - name: Upload xcframework asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: RelativeProtocol/Binary/Tun2Socks.xcframework.zip
          asset_name: Tun2Socks.xcframework.zip
          asset_content_type: application/zip

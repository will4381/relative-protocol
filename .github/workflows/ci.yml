name: CI

on:
  push:
    branches:
      - main
      - relative-protocol-package
    tags:
      - 'v*'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Why run the workflow manually?'
        required: false
        default: 'manual trigger'

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Print Swift toolchain version
        run: swift --version

      - name: Build Leaf xcframework (local)
        run: |
          chmod +x Scripts/build.sh
          ./Scripts/build.sh

      - name: Ensure Leaf binary is present
        run: ls -R RelativeProtocol/Binary/Leaf.xcframework

      - name: Build package (Debug)
        run: swift build

      - name: Build package (Release)
        run: swift build --configuration release

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('Scripts/build.sh') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Prepare build script
        run: chmod +x Scripts/build.sh

      - name: Build Leaf xcframework
        run: ./Scripts/build.sh

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: RelativeProtocol ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Build the Leaf xcframework locally by running:

            ```
            ./Scripts/build.sh
            ```
